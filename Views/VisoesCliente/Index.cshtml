@using TChart.Models.Charts
@model TChart.Models.VisoesClienteViewModel

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Clientes</title>
</head>
<body>
    @{
        var palette = new string[] { "#6B818C", "#FF5964", "#2C363F"};
    }
    <form method="get" asp-action="Index" style="margin-bottom: 10px"> 
        <label for="startDate">Data Inicial:</label> 
        <input type="date" id="startDate" name="startDate" /> 
        <label for="endDate">Data Final:</label> 
        <input type="date" id="endDate" name="endDate" /> <button type="submit">Buscar</button> 
    </form>
    @{
        List<AxisLabelData> clientesPeriodo = new List<AxisLabelData>();
        foreach (var periodo in Model.ClientesPeriodo)
        {
            clientesPeriodo.Add(new AxisLabelData { x = periodo.Periodo, y = periodo.Quantidade });
        }
        ViewBag.dataSource = clientesPeriodo;
    }
    <h1 style="text-align: center;">Clientes</h1>
    <div style="display: flex; justify-content: center; align-items: center; width: 100%; height: 100vh;">
    <div style="flex: 1; margin-left: 10px; margin-right: 10px;">
    <ejs-chart id="containerCliente" width="100%" palettes="palette">
    <e-chart-primaryxaxis valueType="Category"></e-chart-primaryxaxis>
    <e-series-collection>
        <e-series dataSource="ViewBag.dataSource" xName="x" yName="y"
            type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column" fill="#FF5964">
            <e-series-marker>
                 <e-series-datalabel visible="true"></e-series-datalabel>
             </e-series-marker>
        </e-series>
    </e-series-collection>
    </ejs-chart>
    </div>
    </div>
    <ejs-grid id="GridCliente" dataSource="@Model.Clientes" allowPaging="true">
        <e-grid-pagesettings pageSize="10"></e-grid-pagesettings>
    </ejs-grid>
	@{
        List<PieChartData> pieChartCategoria = new List<PieChartData>();
        foreach (var item in Model.CategoriaCliente)
        {
            pieChartCategoria.Add(new PieChartData { xValue = item.CategoriaFinan, yValue = item.Quantidade });
        }
    }
    <h1 style="text-align: center;">Categoria Financeira</h1>
    <div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
        <div style="flex: 1; margin-left: 10px;">
            <ejs-accumulationchart id="containerCategoria">
                <e-accumulationchart-legendsettings visible="true" position="Bottom">
                </e-accumulationchart-legendsettings>
                <e-accumulation-series-collection>
                    <e-accumulation-series dataSource="@pieChartCategoria" xName="xValue" yName="yValue" name="Browser" palettes="palette">
                        <e-accumulationseries-datalabel name="text" visible="true">
                        </e-accumulationseries-datalabel>                    
                    </e-accumulation-series>
                </e-accumulation-series-collection>
            </ejs-accumulationchart>
        </div>
        <div style="flex: 1; margin-right: 10px;">
            <ejs-grid id="GridCategoria" dataSource="@Model.CategoriaCliente" allowPaging="true">
                <e-grid-pagesettings pageSize="10"></e-grid-pagesettings>
            </ejs-grid>
        </div>
    </div>
    @{
        List<PieChartData> pieChartResponsavel = new List<PieChartData>();
        foreach (var item in Model.ResponsavelCliente)
        {
            pieChartResponsavel.Add(new PieChartData { xValue = item.Responsavel, yValue = item.Quantidade });
        }
    }
    <h1 style="text-align: center;">Responsável</h1>
    <div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
        <div style="flex: 1; margin-left: 10px;">
            <ejs-accumulationchart id="containerResponsavel">
                <e-accumulationchart-legendsettings visible="true" position="Bottom">
                </e-accumulationchart-legendsettings>
                <e-accumulation-series-collection>
                    <e-accumulation-series dataSource="@pieChartResponsavel" xName="xValue" yName="yValue" name="Responsável" palettes="palette">
                        <e-accumulationseries-datalabel name="text" visible="true">
                        </e-accumulationseries-datalabel>                    
                    </e-accumulation-series>
                </e-accumulation-series-collection>
            </ejs-accumulationchart>
        </div>
        <div style="flex: 1; margin-right: 10px;">
            <ejs-grid id="GridResponsavel" dataSource="@Model.ResponsavelCliente" allowPaging="true">
                <e-grid-pagesettings pageSize="10"></e-grid-pagesettings>
            </ejs-grid>
        </div>
    </div>

    <h1>Contagem de Clientes por Responsável</h1>
    <table>
        <thead>
            <tr>
                <th>Responsável</th>
                <th>Quantidade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var responsavel in Model.ResponsavelCliente)
            {
                <tr>
                    <td>@responsavel.Responsavel</td>
                    <td>@responsavel.Quantidade</td>
                </tr>
            }
        </tbody>
    </table>

    <h1>Contagem de Clientes por Periodo</h1>
    <table>
        <thead>
            <tr>
                <th>Periodo</th>
                <th>Quantidade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var periodo in Model.ClientesPeriodo)
            {
                <tr>
                    <td>@periodo.Periodo</td>
                    <td>@periodo.Quantidade</td>
                </tr>
            }
        </tbody>
    </table>


    <h1>Contagem de Clientes por Categoria Financeira</h1>
    <table>
        <thead>
            <tr>
                <th>Categoria Financeira</th>
                <th>Quantidade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.CategoriaCliente)
            {
                <tr>
                    <td>@item.CategoriaFinan</td>
                    <td>@item.Quantidade</td>
                </tr>
            }
        </tbody>
    </table>

    <h1>Lista de Clientes</h1>
    <table>
        <thead>
            <tr>
                <th>ID Cliente</th>
                <th>Nome/Razão Social</th>
                <th>Apelido/Nome Fantasia</th>
                <th>Cliente Desde</th>
                <th>Categoria Financeira</th>
                <th>Cod Classificação Financeira</th>
                <th>Des Classificação Financeira</th>
                <th>Valor Limite</th>
                <th>Nome Responsável</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cliente in Model.Clientes)
            {
                <tr>
                    <td>@cliente.IdCliente</td>
                    <td>@cliente.NomeRazaoSocial</td>
                    <td>@cliente.ApelidoNomeFantasia</td>
                    <td>@cliente.DtClienteDesde.ToString("dd/MM/yyyy")</td>
                    <td>@cliente.CategoriaFinan</td>
                    <td>@cliente.TpClassificacaoFinan</td>
                    <td>@cliente.DsClassificacaoFinan</td>                    
                    <td>@cliente.VlLimite.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</td>
                    <td>@cliente.NomeResponsavel</td>
                </tr>
            }
        </tbody>
    </table>
</body>
</html>
